plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id("kotlin-android-extensions")
    id("kotlin-kapt")
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            // buildConfigField("String", "BUILD_TIME", "\"${minutesSinceEpoch}\"")
            buildConfigField("String", "MARVEL_API_BASE_URL", "\"https://gateway.marvel.com/\"")
            buildConfigField("String", "MARVEL_API_KEY_PUBLIC", "\"e7078de0fa9d74d435955101fc214921\"")
            buildConfigField("String", "MARVEL_API_KEY_PRIVATE", "\"1b97c08f628657a733495cd882dca425a2480428\"")

            buildConfigField("String", "MARVEL_DATABASE_NAME", "\"characters-db\"")
            buildConfigField("int", "MARVEL_DATABASE_VERSION", "1")
            buildConfigField("boolean", "MARVEL_DATABASE_EXPORT_SCHEMA", "false")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
}

dependencies {
    def COROUTINES = "1.3.9"
    def ROOM = "2.2.5"
    def NAVIGATION = "2.3.0-rc01"
    def LIFECYCLE = "2.2.0"
    def CORE_KTX = "1.3.2"
    def FRAGMENT_KTX = "1.2.5"
    def DAGGER = "2.29.1"
    def RETROFIT = "2.9.0"
    def LOGGING = "4.9.0"
    def DATABINDING = "3.1.4"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$COROUTINES"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$COROUTINES"
    implementation "com.google.dagger:dagger:$DAGGER"
    kapt "com.google.dagger:dagger-compiler:$DAGGER"

    implementation "androidx.room:room-runtime:$ROOM"
    implementation "androidx.room:room-ktx:$ROOM"

    implementation "androidx.lifecycle:lifecycle-extensions:$LIFECYCLE"
    implementation "androidx.navigation:navigation-ui-ktx:$NAVIGATION"

    implementation "androidx.fragment:fragment-ktx:$FRAGMENT_KTX"
    implementation "androidx.core:core-ktx:$CORE_KTX"
    implementation "androidx.fragment:fragment-ktx:$FRAGMENT_KTX"

    implementation "com.squareup.retrofit2:retrofit:$RETROFIT"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT"
    implementation "com.squareup.okhttp3:logging-interceptor:$LOGGING"

    kapt "com.android.databinding:compiler:$DATABINDING"
    kapt "androidx.room:room-compiler:$ROOM"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}